Lists:
Lists can have data of various types.

lst=[[None]*10 for i in range(5)] // for 2d array of size [5][10]
lst=[None]*10 //for 1d array of size [10]

Removing elements from lists:
list.remove(121)// only first entry is removed,del(list[0]),a=list.pop(0)

lista+listb :concatenates two lists

" ".join(list) joins the elements of list  with delimitor in " " and returns a string  

range(0,5) or range(0,5,2) returns a list

print a in(or not in ) list// checks whether a is in the list or not

List comprehension:
even_squares = [x**2 for x in range(1,12) if x%2==0]
print even_squares

List slicing:
[start:end:stride]
Where start describes where the slice starts (inclusive), end is where it ends (exclusive), and stride describes the space between items in the sliced list. 
Default values =0 ,len(list),1
A negative stride progresses through the list from right to left.
so to reverse a list use lst[::-1]

Lambdas:
The syntax of lambda functions contains only a single statement, which is as follows :
lambda [arg1 [,arg2,.....argn]]:expression

my_list = range(16)
print filter(lambda x: x % 3 == 0, my_list)

Some members functions and built in functions:
len(list) ,list.append(),print list,list.index(),list.insert(1,"duck") //rest items  pushed ,list.sort(reverse=True),sum(list)

http://www.tutorialspoint.com/python3/python_lists.htm for list functions
